//int main() {
//    int n;
//    printf("请输入位数n: ");
//    scanf("%d", &n);  // 1. 获取用户输入的位数n（如3表示找3位自幂数/水仙花数）
//
//    int first = 1;
//    int i = 0;
//    while (i < n - 1) {  // 2. 计算n位数的起始值（10^(n-1)）
//        first *= 10;     // 例如n=3时，循环2次：1→10→100（3位数从100开始）
//        i++;
//    }
//
//    i = first;  // 从n位数的最小值开始遍历
//    while (i < first * 10) {  // 3. 遍历所有n位数（范围：first ~ first*10-1）
//        int t = i;  // 用临时变量t存储当前数字，避免修改i本身
//        int sum = 0;  // 用于累加"各位数字的n次方和"
//
//        do {
//            int d = t % 10;  // 4. 取当前数字的最后一位（如t=153时，d=3）
//            t /= 10;  // 5. 去掉最后一位（如t=153→15，继续分解下一位）
//
//            int p = 1;  // 存储"当前位数字的n次方"
//            int j = 0;
//            while (j < n) {  // 6. 计算d的n次方（如d=5，n=3时：5×5×5=125）
//                p *= d;
//                j++;
//             }
//            sum += p;  // 7. 累加当前位的n次方到总和中
//         } while (t != 0);  // 8. 重复分解，直到所有位都处理完毕（t变为0）
//
//        if (sum == i) {  // 9. 判断：如果总和等于原数，说明是自幂数
//            printf("%d ", i);  // 10. 输出找到的自幂数
//        }
//        i++;  // 继续检查下一个n位数
//     }
//    return 0;
//}
