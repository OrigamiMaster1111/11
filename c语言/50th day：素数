int isPrime(int num) {
    if (num <= 1) {
        return 0;  // 1和小于1的数不是素数
    }
    if (num == 2) {
        return 1;  // 2是素数（唯一的偶数素数）
    }
    if (num % 2 == 0) {
        return 0;  // 偶数（除了2）不是素数
    }
    
    // 只需判断到sqrt(num)即可，减少循环次数
    for (int i = 3; i <= sqrt(num); i += 2) {
        if (num % i == 0) {
            return 0;  // 能被整除，不是素数
        }
    }
    return 1;  // 是素数
}

int main() {
    int start, end;  // 存储用户输入的范围
    
    // 获取用户输入的范围
    printf("请输入两个整数（表示范围，用空格分隔）：");
    scanf("%d %d", &start, &end);
    
    // 处理范围不合理的情况（如start > end）
    if (start > end) {
        // 交换两个数，保证start <= end
        int temp = start;
        start = end;
        end = temp;
    }
    
    // 输出范围内的所有素数
    printf("%d到%d之间的素数有：", start, end);
    int count = 0;  // 统计素数个数
    for (int i = start; i <= end; i++) {
        if (isPrime(i)) {
            printf("%d ", i);
            count++;
        }
    }
    
    // 处理没有素数的情况
    if (count == 0) {
        printf("无");
    }
    printf("\n");  // 换行美观
    
    return 0;
}
